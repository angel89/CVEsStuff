import requests
import csv
import json
import sys
from getopt import getopt


def create_CPE_file(fCPES):
	
	CPES=fCPES.readlines()
	CPES1=list()

	for entry in CPES:
		print("")
		print ("Searching CPEs matching: " + entry.replace('\n', '')) 
		print ('Trying: https://services.nvd.nist.gov/rest/json/cpes/2.0?keywordSearch=' + entry.replace('\n', ''))
		x = requests.get('https://services.nvd.nist.gov/rest/json/cpes/2.0?keywordSearch=' + entry.replace('\n', ''))
		x = json.loads(x.text)
		
		i=0
		
		print("")
		print("Choose the correct CPE and version:")
		if len(x['products']) > 1:
			for CPE in x['products']:
				print (str(i) + ") " + CPE['cpe']['cpeName'])
				i=i+1
			CPES1.append(x['products'][int(input ('Enter the number to select CPE: '))]['cpe']['cpeName'])
		else:
			CPES1.append(x['products'][0]['cpe']['cpeName'])
		
	f = open('created_CPE_File.txt','w')
	for line in CPES1:
		f.write(line + '\n')

	print()
	print("created_CPE_File.txt created")

	
def DownloadCVE(CPES):

	f = csv.writer(open("DownloadedCVES.csv", "w"))
	f.writerow(["Software", "ID", "Published", "Last Modified", "Description", "Base Score", "Base Severity", "Vector String"])

	for entry in CPES:
		print("")
		print ("Fetching CVEs for " + entry) 
		print ('Trying: https://services.nvd.nist.gov/rest/json/cves/2.0?cpeName=' + entry)

		x = requests.get('https://services.nvd.nist.gov/rest/json/cves/2.0?cpeName=' + entry)
		x = json.loads(x.text)
		print('Success')
		
		for cve in x['vulnerabilities']:
			if 'cvssMetricV31' in cve['cve']['metrics']:
				f.writerow([entry.split(':')[3]+':'+entry.split(':')[4]+':'+entry.split(':')[5]+':'+entry.split(':')[6], cve['cve']['id'], cve['cve']['published'], cve['cve']['lastModified'], cve['cve']['descriptions'][0]['value'], cve['cve']['metrics']['cvssMetricV31'][0]['cvssData']['baseScore'], cve['cve']['metrics']['cvssMetricV31'][0]['cvssData']['baseSeverity'], cve['cve']['metrics']['cvssMetricV31'][0]['cvssData']['vectorString']])
			elif 'cvssMetricV2' in cve['cve']['metrics']:
				f.writerow([entry.split(':')[3]+':'+entry.split(':')[4]+':'+entry.split(':')[5]+':'+entry.split(':')[6], cve['cve']['id'], cve['cve']['published'], cve['cve']['lastModified'], cve['cve']['descriptions'][0]['value'], cve['cve']['metrics']['cvssMetricV2'][0]['cvssData']['baseScore'], cve['cve']['metrics']['cvssMetricV2'][0]['baseSeverity'], cve['cve']['metrics']['cvssMetricV2'][0]['cvssData']['vectorString']])
			else:
				print ('ERRORRRRRRRRr parsing or writing JSON/CSV, should not get here')
	print('')
	print ('Created DownloadedCVES.csv')

				
opts=list()
args=list()

print("")

try:
	opts, args = getopt(sys.argv[1:],'m:f:',['CPE_file=','CPE=','create_CPE='])
except:
	print ('Wrong options dumbass')
	exit()
	
if len(opts) > 1 or len(opts) < 1:
	print('only accepts one param')
	exit()
		
CPES=list()

if '--create_CPE' in opts[0]:
	print("Will create file created_CPE_File.txt with list of CPEs from " + opts[0][1])
	create_CPE_file(open(opts[0][1],'r'))
else:
	if '--CPE' in opts[0]:
		CPES.append(opts[0][1])
		print ('Donwloading CVEs for CPE: ' + CPES[0])
	elif '--CPE_file' in opts[0]:
		print ('Loading CPE file')
		fileCPE=open(opts[0][1],'r')
		CPES= fileCPE.read().splitlines()
		print ('Will download CVEs for the following CPES: ' + str(CPES))
	else:
		print ("Something went wrong :(")
		exit()
		
	DownloadCVE(CPES)

	
	
